// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PTCGMetaBuddy.Api.Data;

#nullable disable

namespace PTCGMetaBuddy.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250704184334_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PTCGMetaBuddy.Api.Models.Card", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Artist")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("EvolvesFrom")
                        .HasColumnType("text");

                    b.Property<string>("Hp")
                        .HasColumnType("text");

                    b.Property<string>("ImageLargeUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageSmallUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rarity")
                        .HasColumnType("text");

                    b.Property<string>("RegulationMark")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Rules")
                        .HasColumnType("text[]");

                    b.Property<string>("SetId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SetNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Subtypes")
                        .HasColumnType("text[]");

                    b.Property<string>("Supertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Types")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("SetId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("PTCGMetaBuddy.Api.Models.Set", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsLegal")
                        .HasColumnType("boolean");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrintedTotal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("RotationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SymbolUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("PTCGMetaBuddy.Api.Models.Card", b =>
                {
                    b.HasOne("PTCGMetaBuddy.Api.Models.Set", null)
                        .WithMany()
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
